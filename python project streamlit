{
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/muhammadafnandood/AI-Python/blob/main/python%20project%20streamlit\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "background_save": true,
          "base_uri": "https://localhost:8080/"
        },
        "id": "_ArskCsn7cn_",
        "outputId": "2e68f580-9ad4-4f3c-a454-3e071bea33fc"
      },
      "outputs": [
        {
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "['Sir Ameen', 'Sir Aneeq', 'Sir Sohaib']\n",
            "Sir Sohaib\n",
            "range(0, 10)\n",
            "1\n",
            "2\n",
            "3\n",
            "4\n",
            "5\n",
            "6\n",
            "7\n",
            "8\n",
            "Mintos Zindgi\n",
            "1\n",
            "2\n",
            "3\n",
            "4\n",
            "5\n",
            "6\n",
            "7\n",
            "8\n",
            "9\n",
            "10\n",
            "11\n",
            "12\n"
          ]
        }
      ],
      "source": [
        "names : list [str] = [\"Sir Ameen\", \"Sir Aneeq\", \"Sir Sohaib\"]\n",
        "print(names)\n",
        "print(names[2])\n",
        "print(range(10))\n",
        "res = range(1,10)\n",
        "numbers : list [int] = (1,2,3,4,5,6,7,8,9,10,11,12)\n",
        "print(numbers[0])\n",
        "print(numbers[1])\n",
        "print(numbers[2])\n",
        "print(numbers[3])\n",
        "print(numbers[4])\n",
        "print(numbers[5])\n",
        "print(numbers[6])\n",
        "print(numbers[7])\n",
        "\n",
        "print(\"Mintos Zindgi\")\n",
        "for num in numbers:\n",
        "    print(num)\n",
        "\n",
        "Marks = int(input(\"Enter Your Marks: \"))\n",
        "if (Marks >= 80):\n",
        "    Grade =\"A+\"\n",
        "elif(Marks >= 70):\n",
        "    Grade =\"A\"\n",
        "elif(Marks >= 60):\n",
        "    Grade =\"B\"\n",
        "else:\n",
        "    Grade = \"Fail\"\n",
        "\n",
        "Print(\"Your Grade is :\",Grade )"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "OXY4EFvsBTU3"
      },
      "outputs": [],
      "source": []
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "AmFvFHJ47kML"
      },
      "outputs": [],
      "source": [
        "#  condition -> True/False\n",
        "# if False:\n",
        "#   print(\"condition is true\")\n",
        "# else:\n",
        "#   print(\"condition is false\")\n",
        "\n",
        "# comparison operators -> True / False\n",
        "# num:int = 10\n",
        "# print(num < 10)\n",
        "#  num > 0 = True\n",
        "# print(num > 0) # True\n",
        "# if num > 0: # agr num variable he wo zero bara\n",
        "#     print(\"number is positive\")\n",
        "# else:\n",
        "#     print(\"number is negative\")\n",
        "\n",
        "# num:int = 100\n",
        "#     True    and    False\n",
        "# print(num > 0 and num < 100)\n",
        "# if num > 0 and num < 100: # agr num variable he wo zero bara\n",
        "#     print(\"number is positive\")\n",
        "# else:\n",
        "#     print(\"number is negative\")\n",
        "\n",
        "# name:str = \"Sir Ali\"\n",
        "\n",
        "# if name == \"Sir Sohaib\" :\n",
        "#     print(\"welcome Sir Sohaib\") # indentation\n",
        "# else:\n",
        "#     print(\"App Kon\")\n",
        "\n",
        "# print(\"Kesse hen Aap\")\n",
        "\n",
        "# snake case\n",
        "# time_of_day: str = \"abc\"\n",
        "\n",
        "# if time_of_day == \"morning\":\n",
        "#     print(\"Good Morning\")\n",
        "# elif time_of_day == \"afternoon\":\n",
        "#     print(\"Good AfterNoon\")\n",
        "# elif time_of_day == \"evening\":\n",
        "#     print(\"Good Evening\")\n",
        "# else:\n",
        "#     print(\"Good Night\")\n",
        "\n",
        "\n",
        "# string\n",
        "#integer\n",
        "# boolean\n",
        "# list\n",
        "# name = \"Sir Ali\"\n",
        "#                     0        ,    1       ,   2\n",
        "# names: list[str] = [\"Sir Aneeq\",\"Sir Sohaib\",\"Sir Sami\"]\n",
        "#                     0,1,2,3,4\n",
        "\n",
        "# print(names)\n",
        "# print(names[1])\n",
        "# print(numbers[4])\n",
        "# numbers[0] # -> 1\n",
        "# if numbers[0] > 1:\n",
        "\n",
        "# print(range(5))\n",
        "# res = range(1,5)\n",
        "# starting point\n",
        "# condition\n",
        "# increment\n",
        "\n",
        "# print(numbers)\n",
        "# number2 = list(range(1,5))\n",
        "# print(number2)\n",
        "# print(list[range(1,5)])\n",
        "# numbers: list[int] = [1,2,3,4,5]\n",
        "\n",
        "\n",
        "\n",
        "# for loop\n",
        "# iterables\n",
        "# numbers: list[int] = [1,2,3,4,5] # iterable\n",
        "# print(numbers[0])\n",
        "# print(numbers[1])\n",
        "# print(numbers[2])\n",
        "# print(numbers[3])\n",
        "# print(numbers[4])\n",
        "\n",
        "# for variable in iterable:\n",
        "# num = numbers[0] -> 1\n",
        "# num = numbers[1] -> 2\n",
        "# for n in numbers:\n",
        "#   print(\"n is\",n)\n",
        "\n",
        "\n",
        "\n",
        "numbers = [1,2,3,4,5,6,7,8,9,10]\n",
        "print(\"Aam Zindagi\")\n",
        "print(numbers[0])\n",
        "print(numbers[1])\n",
        "print(numbers[2])\n",
        "print(numbers[3])\n",
        "print(numbers[4])\n",
        "\n",
        "\n",
        "print(\"Mintos Zindagi\")\n",
        "for num in numbers:\n",
        "    print(num)\n",
        "\n",
        "for i in range(1,12):\n",
        "    print(f\"2 x {i} = {2 * i}\")\n",
        "\n",
        "for i in range(1,12):\n",
        "    print(f\"3 x {i} = {3 * i}\")\n",
        "\n",
        "\n",
        "\n"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "7HT9Q-WE7v1m"
      },
      "outputs": [],
      "source": [
        "# Input marks for each subject\n",
        "it_marks = int(input(\"Enter marks obtained in Introduction to Information Technology: \"))\n",
        "office_marks = int(input(\"Enter marks obtained in Office Automation: \"))\n",
        "c_language_marks = int(input(\"Enter marks obtained in Programming Concept using C Language: \"))\n",
        "network_marks = int(input(\"Enter marks obtained in Network Essentials: \"))\n",
        "web_programming_marks = int(input(\"Enter marks obtained in Web Programming Using Bootstrap & PHP: \"))\n",
        "oop_marks = int(input(\"Enter marks obtained in Object Oriented Programming Essentials using C++: \"))\n",
        "practical_marks = int(input(\"Enter marks obtained in Practical: \"))\n",
        "\n",
        "# Maximum and passing marks\n",
        "subjects = {\n",
        "    \"Introduction to Information Technology\": (50, 25),\n",
        "    \"Office Automation\": (100, 50),\n",
        "    \"Programming Concept using C Language\": (50, 25),\n",
        "    \"Network Essentials\": (50, 25),\n",
        "    \"Web Programming Using Bootstrap & PHP\": (100, 50),\n",
        "    \"Object Oriented Programming Essentials using C++\": (50, 25),\n",
        "    \"Practical\": (100, 50),\n",
        "}\n",
        "\n",
        "marks_obtained = [\n",
        "    it_marks,\n",
        "    office_marks,\n",
        "    c_language_marks,\n",
        "    network_marks,\n",
        "    web_programming_marks,\n",
        "    oop_marks,\n",
        "    practical_marks,\n",
        "]\n",
        "\n",
        "# Calculate total marks\n",
        "total_max_marks = sum(max_marks for max_marks, _ in subjects.values())\n",
        "total_marks_obtained = sum(marks_obtained)\n",
        "percentage = (total_marks_obtained / total_max_marks) * 100\n",
        "\n",
        "# Determine remarks\n",
        "if percentage >= 80:\n",
        "    grade = \"A+\"\n",
        "elif percentage >= 70:\n",
        "    grade = \"A\"\n",
        "elif percentage >= 60:\n",
        "    grade = \"B\"\n",
        "elif percentage >= 50:\n",
        "    grade = \"C\"\n",
        "else:\n",
        "    grade = \"Fail\"\n",
        "\n",
        "# Print the marksheet\n",
        "print(\"\\n------------------- Marksheet -------------------\")\n",
        "print(f\"Candidate Name: Muhammad Rizwan\")\n",
        "print(f\"Father's Name: Muhammad Tufail\")\n",
        "print(f\"Course: Diploma in Information Technology\\n\")\n",
        "\n",
        "print(f\"{'Subject':<45}{'Max Marks':<15}{'Passing Marks':<15}{'Marks Obtained':<15}\")\n",
        "for i, (subject, (max_marks, pass_marks)) in enumerate(subjects.items()):\n",
        "    print(f\"{subject:<45}{max_marks:<15}{pass_marks:<15}{marks_obtained[i]:<15}\")\n",
        "\n",
        "print(\"\\nTotal Marks: \", total_max_marks)\n",
        "print(\"Marks Obtained: \", total_marks_obtained)\n",
        "print(\"Percentage: {:.2f}%\".format(percentage))\n",
        "print(\"Grade: \", grade)\n",
        "print(\"Remarks: \", \"PASS\" if grade != \"Fail\" else \"FAIL\")\n",
        "print(\"-------------------------------------------------\")\n"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "d-0bZqlb77IQ"
      },
      "outputs": [],
      "source": [
        "# Get student information\n",
        "name = input(\"Enter student's name: \")\n",
        "roll_number = input(\"Enter student's roll number: \")\n",
        "\n",
        "# Get marks for each subject\n",
        "maths_marks = float(input(\"Enter maths marks: \"))\n",
        "science_marks = float(input(\"Enter science marks: \"))\n",
        "english_marks = float(input(\"Enter english marks: \"))\n",
        "\n",
        "# Calculate total marks and percentage\n",
        "total_marks = maths_marks + science_marks + english_marks\n",
        "percentage = (total_marks / 300) * 100\n",
        "\n",
        "# Print marksheet\n",
        "print(\"\\n-------------------------MARKSHEET-------------------------\")\n",
        "print(f\"Name: {name}\")\n",
        "print(f\"Roll Number: {roll_number}\")\n",
        "print(\"---------------------------------------------------------------\")\n",
        "print(\"Subject          Marks\")\n",
        "print(\"---------------------------------------------------------------\")\n",
        "print(f\"Maths            {maths_marks}\")\n",
        "print(f\"Science          {science_marks}\")\n",
        "print(f\"English          {english_marks}\")\n",
        "print(\"---------------------------------------------------------------\")\n",
        "print(f\"Total Marks: {total_marks}\")\n",
        "print(f\"Percentage: {percentage}%\")\n",
        "print(\"---------------------------------------------------------------\")\n",
        "if percentage >= 80:\n",
        "    print(\"Grade: A\")\n",
        "elif percentage >= 60:\n",
        "    print(\"Grade: B\")\n",
        "elif percentage >= 40:\n",
        "    print(\"Grade: C\")\n",
        "else:\n",
        "    print(\"Grade: F\")\n",
        "print(\"---------------------------------------------------------------\")\n"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "u7PAYf528Mdf"
      },
      "outputs": [],
      "source": [
        "# range function /method\n",
        "\n",
        "# x = range(1,10,2)  # range written krta number of series. , range loop ky sath istamal hota hy.\n",
        "# # 1.starting point  # 1,2,3,4,5\n",
        "# # 2. condition matlib kahan tak apko series chahiye.\n",
        "# # 3. increment\n",
        "# # loop agar koi kam bar bar krana ho usky liye loop use krty hain.\n",
        "# # Variable kaisy banatyhain. number: int (data Type) = 2 (Value)\n",
        "# print(*x)\n",
        "# numbers = [1,2,3,4,5,6,7,8,9]\n",
        "# print(numbers)\n",
        "# print(*x)\n",
        "# print(list(x))\n",
        "\n",
        "# number:int=2\n",
        "# print(\"2 x 1 =\", number*1)\n",
        "# print(\"2 x 1 =\", number*2)\n",
        "\n",
        "# num :int=2\n",
        "# for num in range(1,11):\n",
        "#     print(\"num is\",num)\n",
        "\n",
        "# for num in range(1,11):\n",
        "#     print(\"2 x\",num , \"=\" , 2 * num)\n",
        "\n",
        "# print(f\"2 x {num} =  {2 * num}\") # fstring\n",
        "\n",
        "# 1.loops  , specific numer tak chalta hy.\n",
        "# 2.While loop   ,  jab tak condition true ho gi loop chalta rahy ga jab tak ky condition false na ho.\n",
        "\n",
        "# num = 1\n",
        "# while num <= 10:\n",
        "#     print(num)\n",
        "#     num = num+1\n",
        "\n",
        "# start = 1\n",
        "# while start<10:\n",
        "#     print(f\"count {start}\")\n",
        "#     start= start+1\n",
        "\n",
        "# While Condition  True o False hoti hy/\n",
        "# num=1\n",
        "# while num < 10:    # condition False ho gi kioun ky 10 tak ja kr loop stop ho jaye ga.\n",
        "#     print(num)\n",
        "#     num = num + 1\n",
        "#     print(num)  for   # comment mark ctrl+/ key\n",
        "\n",
        "# user_input= input(\"Type Your Answer Please\")\n",
        "# print(\"user_input\")\n",
        "\n",
        "# pasword: str = \"python123\"\n",
        "# user_input = str = \"\"\n",
        "# while user_input != pasword: # user inputbraber na ho.\n",
        "#     print(\"incorrect paswor!\")\n",
        "\n",
        "# user_input = input(\"Type Your answer please!\")\n",
        "\n",
        "# print(user_input != pasword)\n",
        "\n",
        "# DATA TYPES , str, int, bool , list , tupple\n",
        "\n",
        "# numbers = [1,2,3,4,5]\n",
        "names1 = [\"ALi\",\"Bilal\",\"Hamz\",\"Okasha\"]  # list\n",
        "names2 = (\"ALi\",\"Bilal\",\"Hamz\",\"Okasha\")  # tuple\n",
        "\n",
        "# print(\"list first name is\" , names1[0])  mutable jis list ko change kr sakty hain.\n",
        "# print(\"tuple first name is\" , names2[0]) immutable koi aisi list jo banany kay bad existing value change na kr sakain.\n",
        "\n",
        "name : str = \"Ali\"\n",
        "name  = \"Bilal\"\n",
        "print(\"name\")\n",
        "\n",
        "print(\"names1 before over write\", names1)\n",
        "names1[1] = \"Abdullah\"\n",
        "print(\"names1 before over write\", names1)\n",
        "\n"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 106
        },
        "id": "4mALvCH4nmAR",
        "outputId": "c8da68be-319b-471a-a1eb-6487e6bc1b7b"
      },
      "outputs": [
        {
          "ename": "SyntaxError",
          "evalue": "expected ':' (<ipython-input-1-0ca8b6df6e9f>, line 9)",
          "output_type": "error",
          "traceback": [
            "\u001b[0;36m  File \u001b[0;32m\"<ipython-input-1-0ca8b6df6e9f>\"\u001b[0;36m, line \u001b[0;32m9\u001b[0m\n\u001b[0;31m    if st.button(\"click me\")\u001b[0m\n\u001b[0m                            ^\u001b[0m\n\u001b[0;31mSyntaxError\u001b[0m\u001b[0;31m:\u001b[0m expected ':'\n"
          ]
        }
      ],
      "source": [
        "import streamlit as st\n",
        "\n",
        "st.write(\"ramzan mubarak\")\n",
        "\n",
        "\n",
        "st.write(\"this is growth mindset challange\")\n",
        "\n",
        "st.text_input(\" inter your name\")\n",
        "if st.button(\"click me\")\n",
        "    st.write(\"my name is {name}\")"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "\n",
        "# https://zkofficialst.streamlit.app/\n",
        "\n",
        "\n",
        "# import streamlit as st\n",
        "# import pandas as pd\n",
        "\n",
        "import streamlit as st\n",
        "# st.title(\"Welcome to my first website\")\n",
        "# st.header(\"Python\")\n",
        "# st.subheader(\"java\")\n",
        "# st.markdown( \"I Love Coding\")\n",
        "# st.code(\"\"\"for i in range (1,5,1):\n",
        "#         print(\"hi\")\n",
        "#         \"\"\")\n",
        "\n",
        "\n",
        "#  excel file ke liye ye code he\n",
        "# import pandas as pd  # ye excel sheet add karne ka code he\n",
        "\n",
        "# # veriable dataset\n",
        "# dataset = pd .read_csv( \"code.py.csv\")\n",
        "\n",
        "# st.dataframe(dataset)\n",
        "\n",
        "\n",
        "name = st.text_input( \"Enter your name :\")\n",
        "fname = st.text_input( \"Enter your Father name :\")\n",
        "\n",
        "adr = st.text_area(\"Enter your text:\")\n",
        "\n",
        "# c_data = st.selectbox (\"Enter your class:\", (1,2,3,4,5,6,7,,8,9,10))\n",
        "\n",
        "c_data = st.selectbox(\"Enter your class:\", (1, 2, 3, 4, 5, 6, 7, 8, 9, 10))\n",
        "\n",
        "button = st.button( \"Done\")\n",
        "if button :\n",
        "    st.markdown(f\"\"\"\n",
        "    name : {name}\n",
        "    father name : {fname}\n",
        "     address : {adr}\n",
        "    class : {c_data}\n",
        "\n",
        "\"\"\")\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 384
        },
        "id": "ZTisA9HcqVME",
        "outputId": "39542efd-527d-4dc0-c537-03ff711d19a7"
      },
      "execution_count": 2,
      "outputs": [
        {
          "output_type": "error",
          "ename": "ModuleNotFoundError",
          "evalue": "No module named 'streamlit'",
          "traceback": [
            "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
            "\u001b[0;31mModuleNotFoundError\u001b[0m                       Traceback (most recent call last)",
            "\u001b[0;32m<ipython-input-2-b7ec2aea7efe>\u001b[0m in \u001b[0;36m<cell line: 0>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      5\u001b[0m \u001b[0;31m# import pandas as pd\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      6\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 7\u001b[0;31m \u001b[0;32mimport\u001b[0m \u001b[0mstreamlit\u001b[0m \u001b[0;32mas\u001b[0m \u001b[0mst\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      8\u001b[0m \u001b[0;31m# st.title(\"Welcome to my first website\")\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      9\u001b[0m \u001b[0;31m# st.header(\"Python\")\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;31mModuleNotFoundError\u001b[0m: No module named 'streamlit'",
            "",
            "\u001b[0;31m---------------------------------------------------------------------------\u001b[0;32m\nNOTE: If your import is failing due to a missing package, you can\nmanually install dependencies using either !pip or !apt.\n\nTo view examples of installing some common dependencies, click the\n\"Open Examples\" button below.\n\u001b[0;31m---------------------------------------------------------------------------\u001b[0m\n"
          ],
          "errorDetails": {
            "actions": [
              {
                "action": "open_url",
                "actionText": "Open Examples",
                "url": "/notebooks/snippets/importing_libraries.ipynb"
              }
            ]
          }
        }
      ]
    }
  ],
  "metadata": {
    "colab": {
      "provenance": [],
      "authorship_tag": "ABX9TyOOkc5JmkS7VM1Ta8hmVtyx",
      "include_colab_link": true
    },
    "kernelspec": {
      "display_name": "Python 3",
      "name": "python3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "nbformat": 4,
  "nbformat_minor": 0
}