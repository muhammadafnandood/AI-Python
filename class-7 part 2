{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": [],
      "authorship_tag": "ABX9TyMayt3xbERTUOKiDajmDHgg",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/muhammadafnandood/AI-Python/blob/main/class-7%20part%202\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "aoOKwVAtTKZi"
      },
      "outputs": [],
      "source": [
        "def calculator():\n",
        "    print(\"Simple Calculator\")\n",
        "    print(\"Choose an operation:\")\n",
        "    print(\"1. Addition (+)\")\n",
        "    print(\"2. Subtraction (-)\")\n",
        "    print(\"3. Multiplication (*)\")\n",
        "    print(\"4. Division (/)\")\n",
        "    print(\"5. Exit\")\n",
        "\n",
        "    while True:\n",
        "\n",
        "            choice = int(input(\"\\nEnter your choice (1-5): \"))\n",
        "\n",
        "            if choice == 5:\n",
        "                print(\"Exiting the calculator. Goodbye!\")\n",
        "                break\n",
        "\n",
        "            if choice not in [1, 2, 3, 4]:\n",
        "                print(\"Invalid choice. Please choose a valid operation.\")\n",
        "                continue\n",
        "\n",
        "            num1 = float(input(\"Enter the first number: \"))\n",
        "            num2 = float(input(\"Enter the second number: \"))\n",
        "\n",
        "            if choice == 1:\n",
        "                print(f\"The result of {num1} + {num2} is {num1 + num2}\")\n",
        "            elif choice == 2:\n",
        "                print(f\"The result of {num1} - {num2} is {num1 - num2}\")\n",
        "            elif choice == 3:\n",
        "                print(f\"The result of {num1} * {num2} is {num1 * num2}\")"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#  data types\n",
        "# 1. String\n",
        "# 2. Integer\n",
        "# 3. Boolean\n",
        "# 4. list\n",
        "# 5. tuple\n",
        "# 6. Dictionary\n",
        "\n",
        "\n",
        "# students = [\"Ali\", \"Abdullah\", \"Amir\"]\n",
        "# student = [\"Name\",\"01\",\"Age\", 20,\"Class\",\"Sunday 7-10\"]\n",
        "# student = {\n",
        "#     \"Name\": \"Ali\",\n",
        "#     \"Age\": 20,\n",
        "#     \"Class\": \"Sunday 7-10\",\n",
        "# }\n",
        "# print(\"Before\",student)\n",
        "# student[\"RollNo\"] = 9897\n",
        "\n",
        "# print(\"After\",student)\n",
        "\n",
        "\n",
        "# def charger():\n",
        "#     print(\"Charge Mobile\")\n",
        "\n",
        "# charger()\n",
        "\n",
        "# def ramo_kaka():\n",
        "\n",
        "#     print(\"hi\")\n",
        "\n",
        "#     return \"Biryani Bangayi\"\n",
        "\n",
        "\n",
        "\n",
        "\n",
        "# plate = ramo_kaka()\n",
        "# print(plate)\n",
        "\n",
        "a = 1\n",
        "b = 4\n",
        "\n",
        "# Static Function\n",
        "\n",
        "# def add():\n",
        "#     return a+b\n",
        "# sum = add()\n",
        "# print(sum)\n",
        "\n",
        "#Dynamic Function\n",
        "\n",
        "#        parameter\n",
        "# def greet(name,age,RollNo):\n",
        "\n",
        "#     print(\"Assalam o Alekum Sir\",name,\"Your age is \",age,\"roll no\",RollNo, )\n",
        "\n",
        "# #     argument\n",
        "# greet(\"bilal\",20,1234)\n",
        "\n",
        "\n",
        "# version 1 Static Functions\n",
        "# num1:int =10\n",
        "# num2:int = 10\n",
        "# def addition():\n",
        "#     print(num1 + num2)\n",
        "\n",
        "\n",
        "# addition()\n",
        "\n",
        "\n",
        "# version 2 Dynamic Functions\n",
        "#  Parameters\n",
        "# def addition(num1:int, num2: int):\n",
        "#     print(num1+num2)\n",
        "\n",
        "# #       arguments\n",
        "# addition(10,10)\n",
        "\n",
        "\n",
        "# version 2 Dynamic Functions with return\n",
        "def addition(num1: int, num2: int):\n",
        "    return num1 + num2\n",
        "\n",
        "# print(addition(10,10))\n",
        "# result  = 20\n",
        "result = addition(10,10)\n",
        "print(result)\n",
        "# final_result = 20 + 20\n",
        "final_result = result / 20\n",
        "print(final_result)"
      ],
      "metadata": {
        "id": "e1l1E8B0TuiU"
      },
      "execution_count": null,
      "outputs": []
    }
  ]
}